#include <iostream>
#include <string>
#include <exception>
using namespace std;

template <typename T>
T GetValidData(T one, T two)
{
    exception InvalidRequestException;
    exception InvalidInputException;

    T lower = one;
    T upper = two;
    T mid;
    
    if (lower > upper)
    {
        throw InvalidRequestException("Error: Boundries not in correct high/low format");
    }

    cout << "Enter value between both boundries" << endl;
    cin >> mid;
    
    while (typeid(T) != typeid(mid))
    {
     cout << "Error: Input not of same type" << endl;
    }

    if (mid < lower || mid > upper)
    {
        throw  InvalidInputException("Error: Input not in range");
    }

    else
    {
        cout << "Good Job! You can follow basic instructions" << endl;
    }
    return mid;
}

int main()
{
    int int1 = 1; int int2 = 5; 
    float float1 = 1.0; float float2 = 5.0;
    string str1 = "apple";  string str2 = "orange";


    int answerI;
    float answerF;
    string answerS;

    try
    {
        int answer = GetValidData(int1, int2);
    }
    catch (InvalidRequestException)
    {
        cout << InvalidRequestException.what() << endl;
    }
    catch (InvalidInputException)
    {
        cout << InvalidInputException.what() << endl;
    }

    cout << answerI << endl;
}
